아래의 함수를 만들고, 해당 함수를 호출하여 확인 하시오.

함수이름: getGrade
1.매개변수: double type 1개
리턴타입: 수 우 미 양 가 중 하나의 char 타입


public class Grade {
   public static void main(String[] args) {
      char grade = getGrade(85.8);
      System.out.println("등급은 " + grade + " 입니다.");
   }
   
   public static char getGrade(double avg) {
      char grade = '0';
      if (avg >= 90) {
         grade = '수';
      } else if (avg >= 80 ) {
         grade = '우';
      } else if (avg >= 70 ) {
         grade = '미';
      } else if (avg >= 60 ) {
         grade = '양';
      } else {
         grade = '가';
      }
      return grade;
   }
}


2.매개변수 하나를 받아 
원의 넓이를 리턴하는 함수를 작성하시오.

public class CircleArea {
   public static void main(String[] args) {
      double r = 7.5;
      double area = circleArea(r);
      System.out.println("반지름이 " + r + " 인 원의 넓이는 " + area + " 입니다.");
   }
   
   public static double circleArea(double r) {
      final double PI = 3.14;
      double area = r * r * PI;
      return area;
   }
}

3.매개변수 두 개를 받아, 사각형의 넓이를 리턴하는 함수를 
작성하시오.


public class SquareArea {
   public static void main(String[] args) {
      double num1 = 7.5;
      double num2 = 8.5;
      
      double area = squareArea(num1, num2);
      System.out.println("두 변의 길이가 " num1 + ", " + num2 + " 인 사각형의 넓이는 " + area + " 입니다.);
   }
   
   public static double squareArea(double num1, double num2) {
      double area = num1 * num2;
      return area;
   }
}


4.매개변수 1000을 넣으면 1부터 1000 까지의 합 리턴

public class Adder {
   public static void main(String[] args) {
      int num = 1000;
      int result = adder(num);
      System.out.println("1 부터 " + num + " 까지의 합은 " + result + " 입니다.");
   }
   
   public static int adder(int num) {
      int result = 0;
      for (int i = 1; i <= num; i++) {
         result += i;
      }
      return result;
   }
}

5.매개변수 int 로 3개 받아서 최대값 리턴

public class Max {
   public static void main(String[] args) {
      int num1 = 5;
      int num2 = 1;
      int num3 = 8;
      
      int max = max(num1, num2, num3);
      
      System.out.println("최대값은 " + max);
   }
   
   public static int max(int num1, int num2, int num3) {
      int max = 0;
      if ((num1 > num2) && (num1 > num3)) {
         max = num1;
      } else if (num2 > num3) {
         max = num2;
      } else {
         max = num3;
      }
      return max;
   }
}

6. 아래가 의도하지 않은 결과를 나타내는 이유를 설명하시오.


char ch = '가';
System.out.println(ch + '\n'); //44042 라는 int 정수값 출력됨

// 의도를 표현하기 위한 방법
System.out.println(ch + "\n"); //가 출력됨

7. 변수의 scope 는?

- 변수는 변수가 선언된 시점부터 그 중괄호 블럭 안에서 사용 가능하다.
- 클래스 밖에서 변수 선언은 불가능함
- 같은 영역 내에서 동일 이름의 변수 선언 불가

8. 펙토리얼을 구하는 재귀 함수를 만드시오.

public class Factorial {
   public static void main(String[] args) {
      System.out.println("5 factorial : " + factorial(5));
   }
   
   public static int factorial(int n) {
      if (n == 0) {
         return 1;
      } else {
         return n * (n-1);
      }
   }
}


9.아래를 함수로 만들어 찍으시오.
printStar(5)

    *
   ***
  *****
 *******
*********


public class ExprintStar {
   public static void main(String[] args) {
      for (int i = 1; i <= 5; i++) {
         for (int j = 5; j >= i; j--) {
            System.out.print(" ");
         }
         for (int j = 1; j <= i; j++) {
            System.out.print("*");
         }
         for (int j = 1; j < i; j++) {
            System.out.print("*");
         }
         System.out.println();
      }
   }
}


10.객체란 무엇인가? 예습

11. 아래를 함수로 만들어시오.
getCurrentPaper(126500)

출력:
오만원 : 2장	
만원:    2장
오천원 :1장
천원: 1
오백원: 1개
백원: 0개



public class CountMoney {
   public static void main(String[] args) {
      int money = 126500;
      
      int om = money / 50000;
      int m = (money % 50000) / 10000;
      int oc = (money % 10000) / 5000;
      int c = (money % 5000) / 1000;
      int ob = (money % 1000) / 500;
      int b = (money % 500) / 100;
      
      System.out.println("오만원 : " + om + "장");
      System.out.println("만원 : + m + "장");
      System.out.println("오천원 : " + om + "장");
      System.out.println("천원 : " + om + "장");
      System.out.println("오백원 : " + om + "개");
      System.out.println("백원 : " + om + "개");
   }
}


13.아래의 함수를 만드시오.

파라미터로 1000을 넣으면 1부터 1000까지의
숫자중 5의 배수이자 7의 배수인 수를 카운트 하여 리턴

public class Count {
   public static void main(String[] args) {
      int n = 1000;
      int result = count(n);
      System.out.println("1 부터 " + n + " 까지의 숫자 중 5의 배수이자 7의 배수인 수는 총 " + result + " 개 입니다.");
   }
   
   public static int count(int n) {
      int count = 0;
      for (int i = 1; i <= n; i++) {
         if (((n % 5) == 0) && ((n % 7) == 0)) {
            count++;
         }
      return count;
      }
   }
}


14.아래의 함수를 만드시오.

getGugudan(3) // 3단 출력
getGugudan(5) // 5단 출력
getGugudan(6) // 6단 출력
getGugudan(7) // 7단 출력


public class Gugudan {
   public static void main(String[] args) {
      getGugudan(3);
      System.out.println();
      getGugudan(5);
      System.out.println();
      getGugudan(6);
      System.out.println();
      getGugudan(7);
   }
   
   public static void getGugudan(int num) {
      for (int i = 1; i < 10; i++) {
         System.out.println(num + " * " + i + " = " + (num * i));
      }
   }
}

