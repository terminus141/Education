1.String 클래스에서 concat 메서드를 설명하시오.
-> 두 개의 문자열을 합쳐준다.

2.str.substring(2, 4); substring 사용법에 대하여 설명하시오.
-> 문자열에서 2번지 부터 3번지까지 가져온다.
    str.substring(a, b) -> a번지부터 b-1 번지까지 가져온다.

3. st1.compareTo(st2);compareTo 사용법에 대하여 설명하시오.
-> 두 개의 문자열을 비교해서 같으면 0을 리턴한다.
    "abcd" 와 "ab" 비교시에는 -2를 리턴 -> ab가 포함되어 있으므로 문자열 길이의 차를 리턴.
    번지수 까지 같아야 하므로 "abcd" 와 "c"일 경우에는 길이의 차가 아닌 a 와 c 의 아스키 코드값 차를 리턴.

4.아래의 연산 과정에서 호출되는 함수(원리)를 써서 표현해 보세요.

String str = "age" + 17;

-> "age".concat(String.valueof(17))    : 내부적으로 String이 + 연산을 만나면 concat을 실행한다.


6. StringBuilder 와 String 의 차이는?
-> String은 불변의 속성을 가진다. : 문자열이 추가, 수정, 삭제 등 연산이 발생할 경우 기존 메모리는 그대로 있고
                                            새로운 메모리가 생긴다. -> 연산이 빈번할 경우 힙메모리 부족.
    StringBuilder는 가변의 속성을 가진다. -> 기존 메모리에서 연산이 발생함.

7. String 을 이용하여 프로그래밍 하시오.
String 함수중에서 해결해 보세요. 
입력 : 990925-1012999
출력 : 990925 1012999

import java.util.Scanner;

public class Test02 {

	public static void main(String[] args) {
		String str;
		Scanner sc = new Scanner(System.in);
		
		System.out.print("입력: ");
		str = sc.nextLine();
		
		str = str.replace("-", " ");
		System.out.println(str);
		
	}

}


8.아래의 메모리 그림을 그리시오. (1차원 배열)
int[] ar1 = new int[5];
    
___ar1_____          1000 _________ _______________________________________
|   1000   |   ---->      |            |           |            |           |         |
|__________|                |__________|__________|__________|_________|________|


9. 아래를 프로그래밍 하시오.

"Hello.java" 문자열에서 파일명과 확장자인 java를 분리시키는 프로그램을 짜시오.

입력: Hello.java
출력: 파일이름은: Hello 이며 확장자는 java 입니다.

입력: Java.avi
출력: 파일 이름은: Java 이며 확장자는 avi 입니다.

import java.util.Scanner;

public class Test01 {
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		String str;
		char ch;
		
		System.out.print("입력: ");
		str = sc.nextLine();
		
	    for(int i=0; i<str.length(); i++) {
	    	ch = str.charAt(i);
	    	if(ch == '.') {
	    		System.out.print("파일 이름은: " + str.substring(0,i) + "이며 ");
	    		System.out.println("확장자는 " + str.substring(i+1, str.length()) + "입니다.");
	    		break;
	    	}
	    }
		
	}
}     


10. 배열의 디폴트 초기화 방법은?

// 선언과 동시에 배열 크기 할당
int[] arr = new int[5];  // 0으로 초기화 된 배열
String[] arr = new String[5]; // 출력하면 null이 나옴

// 기존 배열의 참조 변수에 초기화 할당하기
int[] arr;
arr = new int[5];  // 5의 크기를 갖고 초기값 0으로 채워진 배열 생성

//선언과 동시에 배열의 크기 지정 및 값 초기화
int[] arr = {1, 2, 3, 4, 5};
int[] arr = int new int[] {1, 3, 5, 2, 4};
int[] odds = {1,3,5,7,9};
String weeks = {"월", "화", "수", "목", "금", "토", "일"};

// 2차원 배열 선언
int[][] arr = new int[4][3];
int[][] arr = { {2, 5, 3}, {4, 4, 1}, {1, 7, 3}, {3, 4, 5} }; // 3의 크기의 배열을 4개 가질 수 있는 2차원 배열 할당
// arr[0] -> {2, 5, 3}
// arr[1] -> {4, 4, 1}



11.로또 프로그램을 작성하시오.
 -(int)(Math.random()*45+1);  //random 함수 사용 할것
 -로또번호 6개를 출력 하면 됨(번호가 중복 되면 안됩니다)


public class Test01 {
	public static void main(String args[]) {
		Random rd = new Random();
		int[] arr = new int[10];
		
		arr = rd.randNum(arr);
		for(int i : arr) System.out.print(i + " ");
		
		
	}
}

public class Random {
	
	public int[] randNum(int[] arr) {	
		for(int i=0; i<10; i++) {
			arr[i] = (int)(Math.random()*45+1);
			
			for(int j=0; j<i; j++) {
				if(arr[i] == arr[j]) {
					i--;
					break;
				}
			}
			
		}
		
		return arr;
	}
	



12.배열에 10개를 선언후 랜덤으로 정수를 넣어, 그중 MIN
값을 출력하는 프로그램을 작성하시오.


public class Test01 {
	public static void main(String args[]) {
		Min min = new Min();
		int[] arr = new int[5];
		
		System.out.println("min: " + min.minSearch(arr));
		
		
	}
}

public class Min {
	
	public int minSearch(int[] arr) {
		for(int i=0; i<arr.length; i++) arr[i] = (int)(Math.random()*45 + 1);
		
		for(int i : arr) System.out.print(i + " ");
		System.out.println();
		
		int min = arr[0];
		for(int i=0; i<arr.length; i++) if(min > arr[i]) min = arr[i];
		
		return min;
	}
	
}





